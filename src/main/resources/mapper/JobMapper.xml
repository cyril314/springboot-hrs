<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fit.dao.JobDao">
  <resultMap id="BaseResultMap" type="com.fit.entity.Job">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_remark" jdbcType="VARCHAR" property="jobRemark" />
    <result column="job_dept_id" jdbcType="BIGINT" property="jobDeptId" />
    <result column="job_basic_wage" jdbcType="REAL" property="jobBasicWage" />
  </resultMap>
  <sql id="Base_Column_List">
    id, job_name, job_remark, job_dept_id, job_basic_wage
  </sql>
  <select id="getById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from job
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="save" keyProperty="id" parameterType="com.fit.entity.Job" useGeneratedKeys="true">
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobRemark != null">
        job_remark,
      </if>
      <if test="jobDeptId != null">
        job_dept_id,
      </if>
      <if test="jobBasicWage != null">
        job_basic_wage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobRemark != null">
        #{jobRemark,jdbcType=VARCHAR},
      </if>
      <if test="jobDeptId != null">
        #{jobDeptId,jdbcType=BIGINT},
      </if>
      <if test="jobBasicWage != null">
        #{jobBasicWage,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.fit.entity.Job">
    update job
    <set>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobRemark != null">
        job_remark = #{jobRemark,jdbcType=VARCHAR},
      </if>
      <if test="jobDeptId != null">
        job_dept_id = #{jobDeptId,jdbcType=BIGINT},
      </if>
      <if test="jobBasicWage != null">
        job_basic_wage = #{jobBasicWage,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="Base_Where_List">
    <where>
      <if test="jobName != null and jobName != ''">
         and job_name = #{jobName,jdbcType=VARCHAR}
      </if>
      <if test="jobRemark != null and jobRemark != ''">
         and job_remark = #{jobRemark,jdbcType=VARCHAR}
      </if>
      <if test="jobDeptId != null">
         and job_dept_id = #{jobDeptId,jdbcType=BIGINT}
      </if>
      <if test="jobBasicWage != null">
         and job_basic_wage = #{jobBasicWage,jdbcType=REAL}
      </if>
    </where>
  </sql>
  <select id="findList" parameterType="com.fit.entity.Job" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from job
    <include refid="Base_Where_List" />
    order by id desc 
	<if test="offset != null and limit != null">
	limit ${offset}, ${limit}
	</if>
  </select>
  <select id="findCount" resultType="java.lang.Integer">
    select count(1) from job
    <include refid="Base_Where_List" />
  </select>
  <select id="get" parameterType="java.util.Map" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from job
     <include refid="Base_Where_List" />
  </select>
  <delete id="batchDelete">
    delete from job
     where id in (
     <foreach collection="array" item="id" separator=",">
     #{id}
     </foreach>
    )
  </delete>
</mapper>